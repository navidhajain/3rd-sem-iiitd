diff --git a/b/sys.c b/old/sys.c
index 2541d27..ef1a78f 100644
--- a/b/sys.c
+++ b/old/sys.c
@@ -199,31 +199,6 @@ static int set_one_prio(struct task_struct *p, int niceval, int error)
 out:
 	return error;
 }
-SYSCALL_DEFINE4(kernel_2d_memcpy, float **, d, float **, s, int, r, int, c){
-	float temp[r][c];
-	long cop;
-	int row=0;
-	int col=0;
-	while(row<r){
-		col=0;
-		while(col<c){
-			cop=__copy_from_user(&temp[row][col], &s[row][col], sizeof(float));
-			col++;
-		}
-		row++;	
-	}	
-	row=0;
-	col=0;
-	while(row<r){
-		col=0; 
-		while(col<c){
-			cop=__copy_to_user(&d[row][col], &temp[row][col], sizeof(float));
-			col++;
-		}
-		row++;	
-	}	
-	return 0;
-}
 
 SYSCALL_DEFINE3(setpriority, int, which, int, who, int, niceval)
 {
diff --git a/b/syscall_64.tbl b/old/syscall_64.tbl
index 463ad60..f6b5779 100644
--- a/b/syscall_64.tbl
+++ b/old/syscall_64.tbl
@@ -369,7 +369,7 @@
 445	common	landlock_add_rule	sys_landlock_add_rule
 446	common	landlock_restrict_self	sys_landlock_restrict_self
 447	common	memfd_secret		sys_memfd_secret
-448	common	kernel_2d_memcpy	sys_kernel_2d_memcpy
+
 #
 # Due to a historical design error, certain syscalls are numbered differently
 # in x32 as compared to native x86_64.  These syscalls have numbers 512-547.
